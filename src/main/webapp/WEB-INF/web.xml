<?xml version="1.0" encoding="UTF-8"?>
<web-app version="3.0" xmlns="http://java.sun.com/xml/ns/javaee"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee 
    http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd">
	<display-name>traveller Created Web Application</display-name>
	<welcome-file-list>
		<welcome-file>index.jsp</welcome-file>
	</welcome-file-list>
	<!-- log4j监听，放在org.springframework.web.context.ContextLoaderListener前面， 
		否则启动tomcat时会提示一下错误 :
		log4j:WARN No appenders could be found for logger(org.springframework.web.context.ContextLoader). 
		log4j:WARN Please initialize the log4j systemproperly. 
	-->
	<listener>
		<listener-class>org.springframework.web.util.Log4jConfigListener</listener-class>
	</listener>
<!--
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>
-->
	<!-- 防止spring内存溢出监听器 -->
	<!-- 
	<listener> <listener-class>org.springframework.web.util.IntrospectorCleanupListener</listener-class> 
		</listener> 
	-->
	<!-- openSessionInView配置 解决service层延迟加载引起的问题，过滤.action结尾的文件-->
	<filter> 
		<filter-name>openSessionInViewFilter</filter-name> 
		<filter-class>org.springframework.orm.hibernate4.support.OpenSessionInViewFilter</filter-class> 
		<init-param> <param-name>singleSession</param-name>
		<param-value>true</param-value> 
		</init-param> 
	</filter>
		<filter-mapping> 
		<filter-name>openSessionInViewFilter</filter-name> 
		<url-pattern>*.action</url-pattern>
	 </filter-mapping>
		<!-- log4j配置文件 位置 -->
	<context-param>
		<param-name>log4jConfigLocation</param-name>
		<param-value>classpath:log4j.properties</param-value>
	</context-param>
	<!--开一条watchdog线程每600秒扫描一下配置文件的变化 -->
	<context-param>
		<param-name>log4jRefreshInterval</param-name>
		<param-value>600000</param-value>
	</context-param>
	
	<!-- MVC的配置：Processes application requests 
	<servlet>
		<servlet-name>traveller</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>classpath:servlet-context.xml</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
	</servlet>
	<servlet-mapping>
		<servlet-name>traveller</servlet-name>
		<url-pattern>/</url-pattern>
	</servlet-mapping>
	-->
</web-app>
